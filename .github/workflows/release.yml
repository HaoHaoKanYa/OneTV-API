name: Release
on:
  workflow_dispatch:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          update-environment: true
          cache: 'pipenv'

      - name: Install pipenv
        run: pip3 install --user pipenv

      - name: Install dependencies with pipenv
        run: pipenv --python 3.13 && pipenv install --dev

      - name: Build the application
        run: pipenv run pyinstaller tkinter_ui/tkinter_ui.spec

      - name: List dist directory contents
        run: dir dist

      - name: Get info from version.json
        id: get_info
        run: |
          $json = Get-Content version.json | ConvertFrom-Json
          echo "version=$($json.version)" >> $env:GITHUB_ENV
          echo "name=$($json.name)" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Compress dist directory
        run: |
          Compress-Archive -Path dist\* -DestinationPath dist\${{ env.name }}-v${{ env.version }}.zip
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.name }}-v${{ env.version }}
          path: dist\${{ env.name }}-v${{ env.version }}.zip

      - name: Get changelog
        id: get_changelog
        run: |
          $version = "${{ env.version }}"
          $changelog = (Get-Content CHANGELOG.md -Raw)
          $changelog = [regex]::Match($changelog, "(?s)## v$version.*?(?=## v)").Value
          $changelog = $changelog -replace "(?s)^## v$version.*?\n", ""
          $changelog = $changelog.Trim()
          if ([string]::IsNullOrWhiteSpace($changelog)) {
            $changelog = "Release v$version"
          }
          # 将换行符转换为\n，避免多行字符串问题
          $changelog = $changelog -replace "`r`n", "\n" -replace "`n", "\n"
          echo "changelog<<EOF" >> $env:GITHUB_ENV
          echo $changelog >> $env:GITHUB_ENV
          echo "EOF" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: v${{ env.version }}
          body: ${{ env.changelog }}
          draft: false
          prerelease: false
          files: dist/${{ env.name }}-v${{ env.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
