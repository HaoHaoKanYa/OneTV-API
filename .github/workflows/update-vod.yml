name: 🎬 Update VOD Sources

on:
  schedule:
    # 每周日24点执行 (北京时间周一8点)
    - cron: '0 16 * * 0'
  workflow_dispatch:
    inputs:
      force_update:
        description: '强制更新所有点播源'
        required: false
        default: 'false'
        type: boolean

env:
  TZ: Asia/Shanghai

jobs:
  update-vod-sources:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🚀 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install aiohttp tqdm requests configparser bs4 async-timeout flask opencc-python-reimplemented pillow m3u8 pytz
        fi
    
    - name: 📁 Create VOD directories
      run: |
        mkdir -p vod/config
        mkdir -p vod/output
        mkdir -p vod/cache
        mkdir -p vod/logs
    
    - name: 🎬 Update VOD sources
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        FORCE_UPDATE: ${{ github.event.inputs.force_update }}
      run: |
        echo "🎬 开始OneTV-API点播源更新..."
        echo "⏰ 执行时间: $(date '+%Y-%m-%d %H:%M:%S')"
        echo "🔧 强制更新: ${FORCE_UPDATE:-false}"
        echo "📁 当前目录: $(pwd)"
        echo "📂 目录内容:"
        ls -la
        echo "🔍 检查VOD模块:"
        ls -la updates/vod/ || echo "VOD目录不存在"
        echo "🐍 Python版本: $(python --version)"
        echo "📦 已安装包:"
        pip list | grep -E "(aiohttp|tqdm|requests)"

        python -c "
        import asyncio
        import sys
        import os
        import traceback
        sys.path.append('.')

        print('🔍 Python路径:', sys.path)
        print('📁 当前工作目录:', os.getcwd())

        try:
            print('📥 尝试导入VOD模块...')
            from updates.vod.request import update_vod_sources
            print('✅ VOD模块导入成功!')
        except Exception as e:
            print(f'❌ VOD模块导入失败: {str(e)}')
            print('📋 详细错误信息:')
            traceback.print_exc()
            exit(1)

        async def main():
            try:
                print('🚀 开始执行VOD更新...')
                success = await update_vod_sources()
                if success:
                    print('✅ 点播源更新成功!')
                    exit(0)
                else:
                    print('❌ 点播源更新失败!')
                    exit(1)
            except Exception as e:
                print(f'❌ 点播源更新异常: {str(e)}')
                print('📋 详细错误信息:')
                traceback.print_exc()
                exit(1)

        if __name__ == '__main__':
            asyncio.run(main())
        "
    
    - name: 📊 Generate update summary
      if: always()
      run: |
        echo "## 🎬 OneTV-API 点播源更新报告" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📅 更新信息" >> $GITHUB_STEP_SUMMARY
        echo "- **更新时间**: $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
        echo "- **触发方式**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **工作流**: 点播源专用更新流程" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        python3 scripts/generate_vod_summary.py >> $GITHUB_STEP_SUMMARY
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 访问地址" >> $GITHUB_STEP_SUMMARY
        if [ -n "${{ secrets.SUPABASE_URL }}" ]; then
          echo "- **VOD配置文件**: ${{ secrets.SUPABASE_URL }}/storage/v1/object/public/vod-sources/onetv-api-movie.json" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Supabase配置未设置，无法生成访问地址" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: 📝 Upload logs as artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: vod-update-logs-${{ github.run_number }}
        path: |
          vod/output/
          vod/logs/
        retention-days: 30
    
    - name: 🔔 Notify on failure
      if: failure()
      run: |
        echo "❌ 点播源更新失败!"
        echo "请检查以下可能的问题:"
        echo "1. 网络连接问题"
        echo "2. 点播源配置文件格式错误"
        echo "3. Supabase配置问题"
        echo "4. Python依赖问题"
        
        # 如果有日志文件，显示最后几行
        if [ -f "vod/logs/error.log" ]; then
          echo ""
          echo "最近的错误日志:"
          tail -20 vod/logs/error.log
        fi
